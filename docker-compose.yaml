version: "3.8"

services:
  pg:
    image: postgres
    environment:
      POSTGRES_DB: hasker_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HOST: ${POSTGRES_HOST}
      PGDATA: /var/lib/postgresql/data/haskerdb/
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: ${RABBIT_MQ_HOST}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rmq-data:/var/lib/rabbitmq
      - rmq-log:/var/log/rabbitmq
    env_file:
      - ./.env
  web:
    build: .
    command: uwsgi --ini uwsgi_config.ini
    ports:
      - "8800:8800"
    volumes:
      - ./source/static:/app/static
      - ./source/media:/app/media
      - ./source:/app
      - socket_volume:/run/uwsgi/
    depends_on:
      pg:
        condition: service_healthy
    env_file:
      - ./.env
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    volumes:
      - ./source/static:/app/static
      - ./source/media:/app/media
      - socket_volume:/run/uwsgi/
    ports:
      - 80:80
    depends_on:
      - web
volumes:
  db-data:
  socket_volume:
  rmq-data:
  rmq-log:
